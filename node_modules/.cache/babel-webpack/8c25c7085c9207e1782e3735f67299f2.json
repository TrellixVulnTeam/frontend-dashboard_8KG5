{"ast":null,"code":"import _classCallCheck from \"c:/Users/ZRANGO/Workspaces/Angular IDE/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:/Users/ZRANGO/Workspaces/Angular IDE/dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { EventEmitter, ElementRef, NgZone, Input, Output, Component, NgModule } from '@angular/core';\nimport 'highcharts';\n\nvar HighchartsChartComponent = /*#__PURE__*/function () {\n  function HighchartsChartComponent(el, _zone // #75\n  ) {\n    _classCallCheck(this, HighchartsChartComponent);\n\n    this.el = el;\n    this._zone = _zone;\n    this.updateChange = new EventEmitter(true);\n    this.chartInstance = new EventEmitter(); // #26\n  }\n\n  _createClass(HighchartsChartComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var update = changes.update && changes.update.currentValue;\n\n      if (changes.options || update) {\n        this.wrappedUpdateOrCreateChart();\n\n        if (update) {\n          this.updateChange.emit(false); // clear the flag after update\n        }\n      }\n    }\n  }, {\n    key: \"wrappedUpdateOrCreateChart\",\n    value: function wrappedUpdateOrCreateChart() {\n      var _this = this;\n\n      if (this.runOutsideAngular) {\n        this._zone.runOutsideAngular(function () {\n          _this.updateOrCreateChart();\n        });\n      } else {\n        this.updateOrCreateChart();\n      }\n    }\n  }, {\n    key: \"updateOrCreateChart\",\n    value: function updateOrCreateChart() {\n      if (this.chart && this.chart.update) {\n        this.chart.update(this.options, true, this.oneToOne || false);\n      } else {\n        this.chart = this.Highcharts[this.constructorType || 'chart'](this.el.nativeElement, this.options, this.callbackFunction || null); // emit chart instance on init\n\n        this.chartInstance.emit(this.chart);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.chart) {\n        // #56\n        this.chart.destroy();\n        this.chart = null;\n      }\n    }\n  }]);\n\n  return HighchartsChartComponent;\n}();\n\nHighchartsChartComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone // #75\n\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Object)], HighchartsChartComponent.prototype, \"Highcharts\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], HighchartsChartComponent.prototype, \"constructorType\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Function)], HighchartsChartComponent.prototype, \"callbackFunction\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], HighchartsChartComponent.prototype, \"oneToOne\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], HighchartsChartComponent.prototype, \"runOutsideAngular\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], HighchartsChartComponent.prototype, \"options\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], HighchartsChartComponent.prototype, \"update\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], HighchartsChartComponent.prototype, \"updateChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], HighchartsChartComponent.prototype, \"chartInstance\", void 0);\n\nHighchartsChartComponent = __decorate([Component({\n  selector: 'highcharts-chart',\n  template: ''\n}), __metadata(\"design:paramtypes\", [ElementRef, NgZone // #75\n])], HighchartsChartComponent);\n\nvar HighchartsChartModule = function HighchartsChartModule() {\n  _classCallCheck(this, HighchartsChartModule);\n};\n\nHighchartsChartModule = __decorate([NgModule({\n  declarations: [HighchartsChartComponent],\n  exports: [HighchartsChartComponent]\n})], HighchartsChartModule);\n/*\r\n * Public API Surface of highcharts-angular\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { HighchartsChartComponent, HighchartsChartModule };","map":{"version":3,"sources":["ng://highcharts-angular/lib/highcharts-chart.component.ts","ng://highcharts-angular/lib/highcharts-chart.module.ts","ng://highcharts-angular/public_api.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, EventEmitter, Input, OnDestroy, Output, NgZone, OnChanges, SimpleChanges } from '@angular/core';\r\nimport * as Highcharts from 'highcharts';\r\n\r\n@Component({\r\n  selector: 'highcharts-chart',\r\n  template: ''\r\n})\r\nexport class HighchartsChartComponent implements OnDestroy, OnChanges {\r\n  @Input() Highcharts: typeof Highcharts;\r\n  @Input() constructorType: string;\r\n  @Input() callbackFunction: Highcharts.ChartCallbackFunction;\r\n  @Input() oneToOne: boolean; // #20\r\n  @Input() runOutsideAngular: boolean; // #75\r\n  @Input() options: Highcharts.Options;\r\n  @Input() update: boolean;\r\n\r\n  @Output() updateChange = new EventEmitter<boolean>(true);\r\n  @Output() chartInstance = new EventEmitter<Highcharts.Chart>(); // #26\r\n\r\n  private chart: Highcharts.Chart;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private _zone: NgZone // #75\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const update = changes.update && changes.update.currentValue;\r\n    if (changes.options || update) {\r\n      this.wrappedUpdateOrCreateChart();\r\n      if (update) {\r\n        this.updateChange.emit(false); // clear the flag after update\r\n      }\r\n    }\r\n  }\r\n\r\n  wrappedUpdateOrCreateChart() { // #75\r\n    if (this.runOutsideAngular) {\r\n      this._zone.runOutsideAngular(() => {\r\n        this.updateOrCreateChart()\r\n      });\r\n    } else {\r\n      this.updateOrCreateChart();\r\n    }\r\n  }\r\n\r\n  updateOrCreateChart() {\r\n    if (this.chart && this.chart.update) {\r\n      this.chart.update(this.options, true, this.oneToOne || false);\r\n    } else {\r\n      this.chart = (this.Highcharts as any)[this.constructorType || 'chart'](\r\n        this.el.nativeElement,\r\n        this.options,\r\n        this.callbackFunction || null\r\n      );\r\n\r\n      // emit chart instance on init\r\n      this.chartInstance.emit(this.chart);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() { // #44\r\n    if (this.chart) {  // #56\r\n      this.chart.destroy();\r\n      this.chart = null;\r\n    }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {HighchartsChartComponent} from './highcharts-chart.component';\r\n\r\n@NgModule({\r\n  declarations: [ HighchartsChartComponent ],\r\n  exports: [ HighchartsChartComponent ]\r\n})\r\nexport class HighchartsChartModule {}\r\n","/*\r\n * Public API Surface of highcharts-angular\r\n */\r\n\r\nexport * from './lib/highcharts-chart.module';\r\nexport * from './lib/highcharts-chart.component';\r\n"]},"metadata":{},"sourceType":"module"}