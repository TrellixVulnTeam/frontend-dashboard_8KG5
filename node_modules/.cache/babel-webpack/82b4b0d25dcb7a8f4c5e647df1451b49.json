{"ast":null,"code":"import _toArray from \"C:/Users/ZRANGO/Workspaces/Angular IDE/dashboard/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _classCallCheck from \"C:/Users/ZRANGO/Workspaces/Angular IDE/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/ZRANGO/Workspaces/Angular IDE/dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/ZRANGO/Workspaces/Angular IDE/dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/ZRANGO/Workspaces/Angular IDE/dashboard/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input, NgModule, IterableDiffers, KeyValueDiffers, Optional, Renderer2, Self, SecurityContext, ɵɵdefineInjectable } from '@angular/core';\nimport { isPlatformServer, NgClass, NgStyle } from '@angular/common';\nimport { MediaMarshaller, BaseDirective2, SERVER_TOKEN, StyleBuilder, StyleUtils, LAYOUT_CONFIG, CoreModule } from '@angular/flex-layout/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/img-src/img-src.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar ImgSrcStyleBuilder =\n/** @class */\nfunction () {\n  var ImgSrcStyleBuilder = /*#__PURE__*/function (_StyleBuilder) {\n    _inherits(ImgSrcStyleBuilder, _StyleBuilder);\n\n    var _super = _createSuper(ImgSrcStyleBuilder);\n\n    function ImgSrcStyleBuilder() {\n      _classCallCheck(this, ImgSrcStyleBuilder);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(ImgSrcStyleBuilder, [{\n      key: \"buildStyles\",\n\n      /**\n       * @param {?} url\n       * @return {?}\n       */\n      value: function buildStyles(url) {\n        return {\n          'content': url ? \"url(\".concat(url, \")\") : ''\n        };\n      }\n    }]);\n\n    return ImgSrcStyleBuilder;\n  }(StyleBuilder);\n  /** @nocollapse */\n\n\n  ImgSrcStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function ImgSrcStyleBuilder_Factory() {\n      return new ImgSrcStyleBuilder();\n    },\n    token: ImgSrcStyleBuilder,\n    providedIn: \"root\"\n  });\n  ImgSrcStyleBuilder.decorators = [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }];\n  return ImgSrcStyleBuilder;\n}();\n\nvar ImgSrcDirective =\n/** @class */\nfunction () {\n  var ImgSrcDirective = /*#__PURE__*/function (_BaseDirective) {\n    _inherits(ImgSrcDirective, _BaseDirective);\n\n    var _super2 = _createSuper(ImgSrcDirective);\n\n    /**\n     * @param {?} elementRef\n     * @param {?} styleBuilder\n     * @param {?} styler\n     * @param {?} marshal\n     * @param {?} platformId\n     * @param {?} serverModuleLoaded\n     */\n    function ImgSrcDirective(elementRef, styleBuilder, styler, marshal, platformId, serverModuleLoaded) {\n      var _this;\n\n      _classCallCheck(this, ImgSrcDirective);\n\n      _this = _super2.call(this, elementRef, styleBuilder, styler, marshal);\n      _this.platformId = platformId;\n      _this.serverModuleLoaded = serverModuleLoaded;\n      _this.DIRECTIVE_KEY = 'img-src';\n      _this.defaultSrc = '';\n      _this.styleCache = imgSrcCache;\n\n      _this.init();\n\n      _this.setValue(_this.nativeElement.getAttribute('src') || '', '');\n\n      if (isPlatformServer(_this.platformId) && _this.serverModuleLoaded) {\n        _this.nativeElement.setAttribute('src', '');\n      }\n\n      return _this;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n\n\n    _createClass(ImgSrcDirective, [{\n      key: \"updateWithValue\",\n\n      /**\n       * Use the [responsively] activated input value to update\n       * the host img src attribute or assign a default `img.src=''`\n       * if the src has not been defined.\n       *\n       * Do nothing to standard `<img src=\"\">` usages, only when responsive\n       * keys are present do we actually call `setAttribute()`\n       * @protected\n       * @param {?=} value\n       * @return {?}\n       */\n      value: function updateWithValue(value) {\n        /** @type {?} */\n        var url = value || this.defaultSrc;\n\n        if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n          this.addStyles(url);\n        } else {\n          this.nativeElement.setAttribute('src', url);\n        }\n      }\n    }, {\n      key: \"src\",\n      set: function set(val) {\n        this.defaultSrc = val;\n        this.setValue(this.defaultSrc, '');\n      }\n    }]);\n\n    return ImgSrcDirective;\n  }(BaseDirective2);\n\n  ImgSrcDirective.decorators = [{\n    type: Directive\n  }];\n  /** @nocollapse */\n\n  ImgSrcDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: ImgSrcStyleBuilder\n    }, {\n      type: StyleUtils\n    }, {\n      type: MediaMarshaller\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }];\n  };\n\n  ImgSrcDirective.propDecorators = {\n    src: [{\n      type: Input,\n      args: ['src']\n    }]\n  };\n  return ImgSrcDirective;\n}();\n/** @type {?} */\n\n\nvar imgSrcCache = new Map();\n/** @type {?} */\n\nvar inputs = ['src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl', 'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl', 'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'];\n/** @type {?} */\n\nvar selector = \"\\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\\n\";\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n\nvar DefaultImgSrcDirective =\n/** @class */\nfunction () {\n  /**\n   * This directive provides a responsive API for the HTML <img> 'src' attribute\n   * and will update the img.src property upon each responsive activation.\n   *\n   * e.g.\n   *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n   *\n   * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n   */\n  var DefaultImgSrcDirective = /*#__PURE__*/function (_ImgSrcDirective) {\n    _inherits(DefaultImgSrcDirective, _ImgSrcDirective);\n\n    var _super3 = _createSuper(DefaultImgSrcDirective);\n\n    function DefaultImgSrcDirective() {\n      var _this2;\n\n      _classCallCheck(this, DefaultImgSrcDirective);\n\n      _this2 = _super3.apply(this, arguments);\n      _this2.inputs = inputs;\n      return _this2;\n    }\n\n    return DefaultImgSrcDirective;\n  }(ImgSrcDirective);\n\n  DefaultImgSrcDirective.decorators = [{\n    type: Directive,\n    args: [{\n      selector: selector,\n      inputs: inputs\n    }]\n  }];\n  return DefaultImgSrcDirective;\n}();\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/class/class.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ClassDirective =\n/** @class */\nfunction () {\n  var ClassDirective = /*#__PURE__*/function (_BaseDirective2) {\n    _inherits(ClassDirective, _BaseDirective2);\n\n    var _super4 = _createSuper(ClassDirective);\n\n    /**\n     * @param {?} elementRef\n     * @param {?} styler\n     * @param {?} marshal\n     * @param {?} iterableDiffers\n     * @param {?} keyValueDiffers\n     * @param {?} renderer2\n     * @param {?} ngClassInstance\n     */\n    function ClassDirective(elementRef, styler, marshal, iterableDiffers, keyValueDiffers, renderer2, ngClassInstance) {\n      var _this3;\n\n      _classCallCheck(this, ClassDirective);\n\n      _this3 = _super4.call(this, elementRef,\n      /** @type {?} */\n      null, styler, marshal);\n      _this3.ngClassInstance = ngClassInstance;\n      _this3.DIRECTIVE_KEY = 'ngClass';\n\n      if (!_this3.ngClassInstance) {\n        // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n        // the same host element; since the responsive variations may be defined...\n        _this3.ngClassInstance = new NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);\n      }\n\n      _this3.init();\n\n      _this3.setValue('', '');\n\n      return _this3;\n    }\n    /**\n     * Capture class assignments so we cache the default classes\n     * which are merged with activated styles and used as fallbacks.\n     * @param {?} val\n     * @return {?}\n     */\n\n\n    _createClass(ClassDirective, [{\n      key: \"updateWithValue\",\n\n      /**\n       * @protected\n       * @param {?} value\n       * @return {?}\n       */\n      value: function updateWithValue(value) {\n        this.ngClassInstance.ngClass = value;\n        this.ngClassInstance.ngDoCheck();\n      } // ******************************************************************\n      // Lifecycle Hooks\n      // ******************************************************************\n\n      /**\n       * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this.ngClassInstance.ngDoCheck();\n      }\n    }, {\n      key: \"klass\",\n      set: function set(val) {\n        this.ngClassInstance.klass = val;\n        this.setValue(val, '');\n      }\n    }]);\n\n    return ClassDirective;\n  }(BaseDirective2);\n\n  ClassDirective.decorators = [{\n    type: Directive\n  }];\n  /** @nocollapse */\n\n  ClassDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: StyleUtils\n    }, {\n      type: MediaMarshaller\n    }, {\n      type: IterableDiffers\n    }, {\n      type: KeyValueDiffers\n    }, {\n      type: Renderer2\n    }, {\n      type: NgClass,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }];\n  };\n\n  ClassDirective.propDecorators = {\n    klass: [{\n      type: Input,\n      args: ['class']\n    }]\n  };\n  return ClassDirective;\n}();\n/** @type {?} */\n\n\nvar inputs$1 = ['ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl', 'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl', 'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'];\n/** @type {?} */\n\nvar selector$1 = \"\\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\\n\";\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n\nvar DefaultClassDirective =\n/** @class */\nfunction () {\n  /**\n   * Directive to add responsive support for ngClass.\n   * This maintains the core functionality of 'ngClass' and adds responsive API\n   * Note: this class is a no-op when rendered on the server\n   */\n  var DefaultClassDirective = /*#__PURE__*/function (_ClassDirective) {\n    _inherits(DefaultClassDirective, _ClassDirective);\n\n    var _super5 = _createSuper(DefaultClassDirective);\n\n    function DefaultClassDirective() {\n      var _this4;\n\n      _classCallCheck(this, DefaultClassDirective);\n\n      _this4 = _super5.apply(this, arguments);\n      _this4.inputs = inputs$1;\n      return _this4;\n    }\n\n    return DefaultClassDirective;\n  }(ClassDirective);\n\n  DefaultClassDirective.decorators = [{\n    type: Directive,\n    args: [{\n      selector: selector$1,\n      inputs: inputs$1\n    }]\n  }];\n  return DefaultClassDirective;\n}();\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/show-hide/show-hide.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ShowHideStyleBuilder =\n/** @class */\nfunction () {\n  var ShowHideStyleBuilder = /*#__PURE__*/function (_StyleBuilder2) {\n    _inherits(ShowHideStyleBuilder, _StyleBuilder2);\n\n    var _super6 = _createSuper(ShowHideStyleBuilder);\n\n    function ShowHideStyleBuilder() {\n      _classCallCheck(this, ShowHideStyleBuilder);\n\n      return _super6.apply(this, arguments);\n    }\n\n    _createClass(ShowHideStyleBuilder, [{\n      key: \"buildStyles\",\n\n      /**\n       * @param {?} show\n       * @param {?} parent\n       * @return {?}\n       */\n      value: function buildStyles(show, parent) {\n        /** @type {?} */\n        var shouldShow = show === 'true';\n        return {\n          'display': shouldShow ? parent.display || (parent.isServer ? 'initial' : '') : 'none'\n        };\n      }\n    }]);\n\n    return ShowHideStyleBuilder;\n  }(StyleBuilder);\n  /** @nocollapse */\n\n\n  ShowHideStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function ShowHideStyleBuilder_Factory() {\n      return new ShowHideStyleBuilder();\n    },\n    token: ShowHideStyleBuilder,\n    providedIn: \"root\"\n  });\n  ShowHideStyleBuilder.decorators = [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }];\n  return ShowHideStyleBuilder;\n}();\n\nvar ShowHideDirective =\n/** @class */\nfunction () {\n  var ShowHideDirective = /*#__PURE__*/function (_BaseDirective3) {\n    _inherits(ShowHideDirective, _BaseDirective3);\n\n    var _super7 = _createSuper(ShowHideDirective);\n\n    /**\n     * @param {?} elementRef\n     * @param {?} styleBuilder\n     * @param {?} styler\n     * @param {?} marshal\n     * @param {?} layoutConfig\n     * @param {?} platformId\n     * @param {?} serverModuleLoaded\n     */\n    function ShowHideDirective(elementRef, styleBuilder, styler, marshal, layoutConfig, platformId, serverModuleLoaded) {\n      var _this5;\n\n      _classCallCheck(this, ShowHideDirective);\n\n      _this5 = _super7.call(this, elementRef, styleBuilder, styler, marshal);\n      _this5.layoutConfig = layoutConfig;\n      _this5.platformId = platformId;\n      _this5.serverModuleLoaded = serverModuleLoaded;\n      _this5.DIRECTIVE_KEY = 'show-hide';\n      /**\n       * Original DOM Element CSS display style\n       */\n\n      _this5.display = '';\n      _this5.hasLayout = false;\n      _this5.hasFlexChild = false;\n      return _this5;\n    } // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(ShowHideDirective, [{\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this.trackExtraTriggers();\n        /** @type {?} */\n\n        var children = Array.from(this.nativeElement.children);\n\n        for (var i = 0; i < children.length; i++) {\n          if (this.marshal.hasValue(\n          /** @type {?} */\n          children[i], 'flex')) {\n            this.hasFlexChild = true;\n            break;\n          }\n        }\n\n        if (DISPLAY_MAP.has(this.nativeElement)) {\n          this.display =\n          /** @type {?} */\n          DISPLAY_MAP.get(this.nativeElement);\n        } else {\n          this.display = this.getDisplayStyle();\n          DISPLAY_MAP.set(this.nativeElement, this.display);\n        }\n\n        this.init(); // set the default to show unless explicitly overridden\n\n        /** @type {?} */\n\n        var defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n\n        if (defaultValue === undefined || defaultValue === '') {\n          this.setValue(true, '');\n        } else {\n          this.triggerUpdate();\n        }\n      }\n      /**\n       * On changes to any \\@Input properties...\n       * Default to use the non-responsive Input value ('fxShow')\n       * Then conditionally override with the mq-activated Input's current value\n       * @param {?} changes\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        var _this6 = this;\n\n        Object.keys(changes).forEach(\n        /**\n        * @param {?} key\n        * @return {?}\n        */\n        function (key) {\n          if (_this6.inputs.indexOf(key) !== -1) {\n            /** @type {?} */\n            var inputKey = key.split('.');\n            /** @type {?} */\n\n            var bp = inputKey.slice(1).join('.');\n            /** @type {?} */\n\n            var inputValue = changes[key].currentValue;\n            /** @type {?} */\n\n            var shouldShow = inputValue !== '' ? inputValue !== 0 ? coerceBooleanProperty(inputValue) : false : true;\n\n            if (inputKey[0] === 'fxHide') {\n              shouldShow = !shouldShow;\n            }\n\n            _this6.setValue(shouldShow, bp);\n          }\n        });\n      } // *********************************************\n      // Protected methods\n      // *********************************************\n\n      /**\n       *  Watch for these extra triggers to update fxShow, fxHide stylings\n       * @protected\n       * @return {?}\n       */\n\n    }, {\n      key: \"trackExtraTriggers\",\n      value: function trackExtraTriggers() {\n        var _this7 = this;\n\n        this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n        ['layout', 'layout-align'].forEach(\n        /**\n        * @param {?} key\n        * @return {?}\n        */\n        function (key) {\n          _this7.marshal.trackValue(_this7.nativeElement, key).pipe(takeUntil(_this7.destroySubject)).subscribe(_this7.triggerUpdate.bind(_this7));\n        });\n      }\n      /**\n       * Override accessor to the current HTMLElement's `display` style\n       * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n       * unless it was already explicitly specified inline or in a CSS stylesheet.\n       * @protected\n       * @return {?}\n       */\n\n    }, {\n      key: \"getDisplayStyle\",\n      value: function getDisplayStyle() {\n        return this.hasLayout || this.hasFlexChild && this.layoutConfig.addFlexToParent ? 'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n      }\n      /**\n       * Validate the visibility value and then update the host's inline display style\n       * @protected\n       * @param {?=} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"updateWithValue\",\n      value: function updateWithValue() {\n        var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n        if (value === '') {\n          return;\n        }\n        /** @type {?} */\n\n\n        var isServer = isPlatformServer(this.platformId);\n        this.addStyles(value ? 'true' : 'false', {\n          display: this.display,\n          isServer: isServer\n        });\n\n        if (isServer && this.serverModuleLoaded) {\n          this.nativeElement.style.setProperty('display', '');\n        }\n\n        this.marshal.triggerUpdate(\n        /** @type {?} */\n        this.parentElement, 'layout-gap');\n      }\n    }]);\n\n    return ShowHideDirective;\n  }(BaseDirective2);\n\n  ShowHideDirective.decorators = [{\n    type: Directive\n  }];\n  /** @nocollapse */\n\n  ShowHideDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: ShowHideStyleBuilder\n    }, {\n      type: StyleUtils\n    }, {\n      type: MediaMarshaller\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LAYOUT_CONFIG]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }];\n  };\n\n  return ShowHideDirective;\n}();\n/** @type {?} */\n\n\nvar DISPLAY_MAP = new WeakMap();\n/** @type {?} */\n\nvar inputs$2 = ['fxShow', 'fxShow.print', 'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl', 'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl', 'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg', 'fxHide', 'fxHide.print', 'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl', 'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl', 'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'];\n/** @type {?} */\n\nvar selector$2 = \"\\n  [fxShow], [fxShow.print],\\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\\n  [fxHide], [fxHide.print],\\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\\n\";\n/**\n * 'show' Layout API directive\n */\n\nvar DefaultShowHideDirective =\n/** @class */\nfunction () {\n  /**\n   * 'show' Layout API directive\n   */\n  var DefaultShowHideDirective = /*#__PURE__*/function (_ShowHideDirective) {\n    _inherits(DefaultShowHideDirective, _ShowHideDirective);\n\n    var _super8 = _createSuper(DefaultShowHideDirective);\n\n    function DefaultShowHideDirective() {\n      var _this8;\n\n      _classCallCheck(this, DefaultShowHideDirective);\n\n      _this8 = _super8.apply(this, arguments);\n      _this8.inputs = inputs$2;\n      return _this8;\n    }\n\n    return DefaultShowHideDirective;\n  }(ShowHideDirective);\n\n  DefaultShowHideDirective.decorators = [{\n    type: Directive,\n    args: [{\n      selector: selector$2,\n      inputs: inputs$2\n    }]\n  }];\n  return DefaultShowHideDirective;\n}();\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/style/style-transforms.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * NgStyle allowed inputs\n */\n\n\nvar NgStyleKeyValue =\n/**\n * @param {?} key\n * @param {?} value\n * @param {?=} noQuotes\n */\nfunction NgStyleKeyValue(key, value) {\n  var noQuotes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  _classCallCheck(this, NgStyleKeyValue);\n\n  this.key = key;\n  this.value = value;\n  this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n  this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n  this.value = this.value.replace(/;/, '');\n};\n/**\n * @param {?} target\n * @return {?}\n */\n\n\nfunction getType(target) {\n  /** @type {?} */\n  var what = typeof target;\n\n  if (what === 'object') {\n    return target.constructor === Array ? 'array' : target.constructor === Set ? 'set' : 'object';\n  }\n\n  return what;\n}\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n * @param {?} source\n * @param {?=} delimiter\n * @return {?}\n */\n\n\nfunction buildRawList(source) {\n  var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ';';\n  return String(source).trim().split(delimiter).map(\n  /**\n  * @param {?} val\n  * @return {?}\n  */\n  function (val) {\n    return val.trim();\n  }).filter(\n  /**\n  * @param {?} val\n  * @return {?}\n  */\n  function (val) {\n    return val !== '';\n  });\n}\n/**\n * Convert array of key:value strings to a iterable map object\n * @param {?} styles\n * @param {?=} sanitize\n * @return {?}\n */\n\n\nfunction buildMapFromList(styles, sanitize) {\n  /** @type {?} */\n  var sanitizeValue =\n  /**\n  * @param {?} it\n  * @return {?}\n  */\n  function sanitizeValue(it) {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n\n    return it;\n  };\n\n  return styles.map(stringToKeyValue).filter(\n  /**\n  * @param {?} entry\n  * @return {?}\n  */\n  function (entry) {\n    return !!entry;\n  }).map(sanitizeValue).reduce(keyValuesToMap,\n  /** @type {?} */\n  {});\n}\n/**\n * Convert Set<string> or raw Object to an iterable NgStyleMap\n * @param {?} source\n * @param {?=} sanitize\n * @return {?}\n */\n\n\nfunction buildMapFromSet(source, sanitize) {\n  /** @type {?} */\n  var list = [];\n\n  if (getType(source) === 'set') {\n    /** @type {?} */\n    source.forEach(\n    /**\n    * @param {?} entry\n    * @return {?}\n    */\n    function (entry) {\n      return list.push(entry);\n    });\n  } else {\n    Object.keys(source).forEach(\n    /**\n    * @param {?} key\n    * @return {?}\n    */\n    function (key) {\n      list.push(\"\".concat(key, \":\").concat(\n      /** @type {?} */\n      source[key]));\n    });\n  }\n\n  return buildMapFromList(list, sanitize);\n}\n/**\n * Convert 'key:value' -> [key, value]\n * @param {?} it\n * @return {?}\n */\n\n\nfunction stringToKeyValue(it) {\n  var _it$split = it.split(':'),\n      _it$split2 = _toArray(_it$split),\n      key = _it$split2[0],\n      vals = _it$split2.slice(1);\n\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n/**\n * Convert [ [key,value] ] -> { key : value }\n * @param {?} map\n * @param {?} entry\n * @return {?}\n */\n\n\nfunction keyValuesToMap(map, entry) {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n\n  return map;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/style/style.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar StyleDirective =\n/** @class */\nfunction () {\n  var StyleDirective = /*#__PURE__*/function (_BaseDirective4) {\n    _inherits(StyleDirective, _BaseDirective4);\n\n    var _super9 = _createSuper(StyleDirective);\n\n    /**\n     * @param {?} elementRef\n     * @param {?} styler\n     * @param {?} marshal\n     * @param {?} sanitizer\n     * @param {?} differs\n     * @param {?} renderer2\n     * @param {?} ngStyleInstance\n     * @param {?} serverLoaded\n     * @param {?} platformId\n     */\n    function StyleDirective(elementRef, styler, marshal, sanitizer, differs, renderer2, ngStyleInstance, serverLoaded, platformId) {\n      var _this9;\n\n      _classCallCheck(this, StyleDirective);\n\n      _this9 = _super9.call(this, elementRef,\n      /** @type {?} */\n      null, styler, marshal);\n      _this9.sanitizer = sanitizer;\n      _this9.ngStyleInstance = ngStyleInstance;\n      _this9.DIRECTIVE_KEY = 'ngStyle';\n\n      if (!_this9.ngStyleInstance) {\n        // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n        // defined on the same host element; since the responsive variations may be defined...\n        _this9.ngStyleInstance = new NgStyle(elementRef, differs, renderer2);\n      }\n\n      _this9.init();\n      /** @type {?} */\n\n\n      var styles = _this9.nativeElement.getAttribute('style') || '';\n      _this9.fallbackStyles = _this9.buildStyleMap(styles);\n      _this9.isServer = serverLoaded && isPlatformServer(platformId);\n      return _this9;\n    }\n    /**\n     * Add generated styles\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    _createClass(StyleDirective, [{\n      key: \"updateWithValue\",\n      value: function updateWithValue(value) {\n        /** @type {?} */\n        var styles = this.buildStyleMap(value);\n        this.ngStyleInstance.ngStyle = Object.assign(Object.assign({}, this.fallbackStyles), styles);\n\n        if (this.isServer) {\n          this.applyStyleToElement(styles);\n        }\n\n        this.ngStyleInstance.ngDoCheck();\n      }\n      /**\n       * Remove generated styles\n       * @protected\n       * @return {?}\n       */\n\n    }, {\n      key: \"clearStyles\",\n      value: function clearStyles() {\n        this.ngStyleInstance.ngStyle = this.fallbackStyles;\n        this.ngStyleInstance.ngDoCheck();\n      }\n      /**\n       * Convert raw strings to ngStyleMap; which is required by ngStyle\n       * NOTE: Raw string key-value pairs MUST be delimited by `;`\n       *       Comma-delimiters are not supported due to complexities of\n       *       possible style values such as `rgba(x,x,x,x)` and others\n       * @protected\n       * @param {?} styles\n       * @return {?}\n       */\n\n    }, {\n      key: \"buildStyleMap\",\n      value: function buildStyleMap(styles) {\n        var _this10 = this;\n\n        // Always safe-guard (aka sanitize) style property values\n\n        /** @type {?} */\n        var sanitizer =\n        /**\n        * @param {?} val\n        * @return {?}\n        */\n        function sanitizer(val) {\n          return _this10.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n        };\n\n        if (styles) {\n          switch (getType(styles)) {\n            case 'string':\n              return buildMapFromList$1(buildRawList(styles), sanitizer);\n\n            case 'array':\n              return buildMapFromList$1(\n              /** @type {?} */\n              styles, sanitizer);\n\n            case 'set':\n              return buildMapFromSet(styles, sanitizer);\n\n            default:\n              return buildMapFromSet(styles, sanitizer);\n          }\n        }\n\n        return {};\n      } // ******************************************************************\n      // Lifecycle Hooks\n      // ******************************************************************\n\n      /**\n       * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this.ngStyleInstance.ngDoCheck();\n      }\n    }]);\n\n    return StyleDirective;\n  }(BaseDirective2);\n\n  StyleDirective.decorators = [{\n    type: Directive\n  }];\n  /** @nocollapse */\n\n  StyleDirective.ctorParameters = function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: StyleUtils\n    }, {\n      type: MediaMarshaller\n    }, {\n      type: DomSanitizer\n    }, {\n      type: KeyValueDiffers\n    }, {\n      type: Renderer2\n    }, {\n      type: NgStyle,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  };\n\n  return StyleDirective;\n}();\n/** @type {?} */\n\n\nvar inputs$3 = ['ngStyle', 'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl', 'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl', 'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'];\n/** @type {?} */\n\nvar selector$3 = \"\\n  [ngStyle],\\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\\n\";\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n\nvar DefaultStyleDirective =\n/** @class */\nfunction () {\n  /**\n   * Directive to add responsive support for ngStyle.\n   *\n   */\n  var DefaultStyleDirective = /*#__PURE__*/function (_StyleDirective) {\n    _inherits(DefaultStyleDirective, _StyleDirective);\n\n    var _super10 = _createSuper(DefaultStyleDirective);\n\n    function DefaultStyleDirective() {\n      var _this11;\n\n      _classCallCheck(this, DefaultStyleDirective);\n\n      _this11 = _super10.apply(this, arguments);\n      _this11.inputs = inputs$3;\n      return _this11;\n    }\n\n    return DefaultStyleDirective;\n  }(StyleDirective);\n\n  DefaultStyleDirective.decorators = [{\n    type: Directive,\n    args: [{\n      selector: selector$3,\n      inputs: inputs$3\n    }]\n  }];\n  return DefaultStyleDirective;\n}();\n/**\n * Build a styles map from a list of styles, while sanitizing bad values first\n * @param {?} styles\n * @param {?=} sanitize\n * @return {?}\n */\n\n\nfunction buildMapFromList$1(styles, sanitize) {\n  /** @type {?} */\n  var sanitizeValue =\n  /**\n  * @param {?} it\n  * @return {?}\n  */\n  function sanitizeValue(it) {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n\n    return it;\n  };\n\n  return styles.map(stringToKeyValue).filter(\n  /**\n  * @param {?} entry\n  * @return {?}\n  */\n  function (entry) {\n    return !!entry;\n  }).map(sanitizeValue).reduce(keyValuesToMap,\n  /** @type {?} */\n  {});\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar ALL_DIRECTIVES = [DefaultShowHideDirective, DefaultClassDirective, DefaultStyleDirective, DefaultImgSrcDirective];\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\nvar ExtendedModule =\n/** @class */\nfunction () {\n  /**\n   * *****************************************************************\n   * Define module for the Extended API\n   * *****************************************************************\n   */\n  var ExtendedModule = function ExtendedModule() {\n    _classCallCheck(this, ExtendedModule);\n  };\n\n  ExtendedModule.decorators = [{\n    type: NgModule,\n    args: [{\n      imports: [CoreModule],\n      declarations: [].concat(ALL_DIRECTIVES),\n      exports: [].concat(ALL_DIRECTIVES)\n    }]\n  }];\n  return ExtendedModule;\n}();\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { ExtendedModule, ClassDirective, DefaultClassDirective, ImgSrcStyleBuilder, ImgSrcDirective, DefaultImgSrcDirective, ShowHideStyleBuilder, ShowHideDirective, DefaultShowHideDirective, StyleDirective, DefaultStyleDirective };","map":{"version":3,"sources":["../../../src/lib/extended/module.ts","../../../src/lib/extended/style/style.ts","../../../src/lib/extended/style/style-transforms.ts","../../../src/lib/extended/show-hide/show-hide.ts","../../../src/lib/extended/class/class.ts","../../../src/lib/extended/img-src/img-src.ts"],"names":["buildMapFromList","inputs","selector"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\n@Directive()\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(elementRef: ElementRef,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              protected sanitizer: DomSanitizer,\n              differs: KeyValueDiffers,\n              renderer2: Renderer2,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(elementRef, differs, renderer2);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n  isServer: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display || (parent.isServer ? 'initial' : '') : 'none'};\n  }\n}\n\n@Directive()\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original DOM Element CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: ShowHideStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    const isServer = isPlatformServer(this.platformId);\n    this.addStyles(value ? 'true' : 'false', {display: this.display, isServer});\n    if (isServer && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\n@Directive()\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(elementRef: ElementRef,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              iterableDiffers: IterableDiffers,\n              keyValueDiffers: KeyValueDiffers,\n              renderer2: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\n@Directive()\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: ImgSrcStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n"]},"metadata":{},"sourceType":"module"}